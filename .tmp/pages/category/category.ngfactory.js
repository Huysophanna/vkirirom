/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './category';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/navigation/nav-controller';
import * as import9 from '../../providers/api';
import * as import10 from 'ionic-angular/navigation/nav-params';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from 'ionic-angular/components/toolbar/toolbar';
import * as import14 from 'ionic-angular/components/navbar/navbar';
import * as import15 from 'ionic-angular/components/button/button';
import * as import16 from 'ionic-angular/components/menu/menu-toggle';
import * as import17 from 'ionic-angular/components/toolbar/toolbar-item';
import * as import18 from '@angular/core/src/linker/query_list';
import * as import19 from 'ionic-angular/components/icon/icon';
import * as import20 from 'ionic-angular/components/toolbar/toolbar-title';
import * as import21 from 'ionic-angular/components/content/content';
import * as import22 from 'ionic-angular/config/config';
import * as import23 from '@angular/core/src/linker/element_ref';
import * as import24 from 'ionic-angular/navigation/view-controller';
import * as import25 from '../../node_modules/ionic-angular/components/navbar/navbar.ngfactory';
import * as import26 from 'ionic-angular/components/app/app';
import * as import27 from '../../node_modules/ionic-angular/components/button/button.ngfactory';
import * as import28 from 'ionic-angular/components/menu/menu-controller';
import * as import29 from '../../node_modules/ionic-angular/components/toolbar/toolbar-title.ngfactory';
import * as import30 from '../../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import31 from 'ionic-angular/util/keyboard';
import * as import32 from '@angular/core/src/zone/ng_zone';
import * as import33 from 'ionic-angular/components/tabs/tabs';
var renderType_Category_Host = null;
var _View_Category_Host0 = (function (_super) {
    __extends(_View_Category_Host0, _super);
    function _View_Category_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Category_Host0, renderType_Category_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Category_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('page-category', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Category0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Category_0_4 = new import3.Category(this.parentInjector.get(import8.NavController), this.parentInjector.get(import9.Api), this.parentInjector.get(import10.NavParams));
        this._appEl_0.initComponent(this._Category_0_4, [], compView_0);
        compView_0.create(this._Category_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_Category_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.Category) && (0 === requestNodeIndex))) {
            return this._Category_0_4;
        }
        return notFoundResult;
    };
    return _View_Category_Host0;
}(import1.AppView));
function viewFactory_Category_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Category_Host === null)) {
        (renderType_Category_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_Category_Host0(viewUtils, parentInjector, declarationEl);
}
export var CategoryNgFactory = new import12.ComponentFactory('page-category', viewFactory_Category_Host0, import3.Category);
var styles_Category = [];
var renderType_Category = null;
var _View_Category0 = (function (_super) {
    __extends(_View_Category0, _super);
    function _View_Category0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Category0, renderType_Category, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Category0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'ion-header', null);
        this._Header_1_3 = new import13.Header(this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_1), this.renderer, this.parentInjector.get(import24.ViewController, null));
        this._text_2 = this.renderer.createText(this._el_1, '\n\n  ', null);
        this._el_3 = this.renderer.createElement(this._el_1, 'ion-navbar', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'toolbar');
        this._appEl_3 = new import2.AppElement(3, 1, this, this._el_3);
        var compView_3 = import25.viewFactory_Navbar0(this.viewUtils, this.injector(3), this._appEl_3);
        this._Navbar_3_4 = new import14.Navbar(this.parentInjector.get(import26.App), this.parentInjector.get(import24.ViewController, null), this.parentInjector.get(import8.NavController, null), this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_3), this.renderer);
        this._appEl_3.initComponent(this._Navbar_3_4, [], compView_3);
        this._text_4 = this.renderer.createText(null, '\n    ', null);
        this._el_5 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_5, 'ion-button', '');
        this.renderer.setElementAttribute(this._el_5, 'menuToggle', '');
        this._appEl_5 = new import2.AppElement(5, 3, this, this._el_5);
        var compView_5 = import27.viewFactory_Button0(this.viewUtils, this.injector(5), this._appEl_5);
        this._Button_5_4 = new import15.Button('', '', this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_5), this.renderer);
        this._MenuToggle_5_5 = new import16.MenuToggle(this.parentInjector.get(import28.MenuController), new import23.ElementRef(this._el_5), this.parentInjector.get(import24.ViewController, null), this._Navbar_3_4);
        this._ToolbarItem_5_6 = new import17.ToolbarItem(this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_5), this.renderer, this.parentInjector.get(import13.Toolbar, null), this._Navbar_3_4);
        this._query_Button_5_0 = new import18.QueryList();
        this._appEl_5.initComponent(this._Button_5_4, [], compView_5);
        this._text_6 = this.renderer.createText(null, '\n      ', null);
        this._el_7 = this.renderer.createElement(null, 'ion-icon', null);
        this.renderer.setElementAttribute(this._el_7, 'name', 'menu');
        this.renderer.setElementAttribute(this._el_7, 'role', 'img');
        this._Icon_7_3 = new import19.Icon(this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_7), this.renderer);
        this._text_8 = this.renderer.createText(null, '\n    ', null);
        compView_5.create(this._Button_5_4, [[].concat([
                this._text_6,
                this._el_7,
                this._text_8
            ])], null);
        this._text_9 = this.renderer.createText(null, '\n    ', null);
        this._el_10 = this.renderer.createElement(null, 'ion-title', null);
        this._appEl_10 = new import2.AppElement(10, 3, this, this._el_10);
        var compView_10 = import29.viewFactory_ToolbarTitle0(this.viewUtils, this.injector(10), this._appEl_10);
        this._ToolbarTitle_10_4 = new import20.ToolbarTitle(this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_10), this.renderer, this.parentInjector.get(import13.Toolbar, null), this._Navbar_3_4);
        this._appEl_10.initComponent(this._ToolbarTitle_10_4, [], compView_10);
        this._text_11 = this.renderer.createText(null, '', null);
        compView_10.create(this._ToolbarTitle_10_4, [[].concat([this._text_11])], null);
        this._text_12 = this.renderer.createText(null, '\n  ', null);
        compView_3.create(this._Navbar_3_4, [
            [].concat([this._el_5]),
            [],
            [],
            [].concat([
                this._text_4,
                this._text_9,
                this._el_10,
                this._text_12
            ])
        ], null);
        this._text_13 = this.renderer.createText(this._el_1, '\n\n', null);
        this._text_14 = this.renderer.createText(parentRenderNode, '\n\n\n', null);
        this._el_15 = this.renderer.createElement(parentRenderNode, 'ion-content', null);
        this.renderer.setElementAttribute(this._el_15, 'padding', '');
        this._appEl_15 = new import2.AppElement(15, null, this, this._el_15);
        var compView_15 = import30.viewFactory_Content0(this.viewUtils, this.injector(15), this._appEl_15);
        this._Content_15_4 = new import21.Content(this.parentInjector.get(import22.Config), new import23.ElementRef(this._el_15), this.renderer, this.parentInjector.get(import26.App), this.parentInjector.get(import31.Keyboard), this.parentInjector.get(import32.NgZone), this.parentInjector.get(import24.ViewController, null), this.parentInjector.get(import33.Tabs, null));
        this._appEl_15.initComponent(this._Content_15_4, [], compView_15);
        this._text_16 = this.renderer.createText(null, '\n\n', null);
        compView_15.create(this._Content_15_4, [
            [],
            [].concat([this._text_16]),
            []
        ], null);
        this._text_17 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_5, 'click', this.eventHandler(this._handle_click_5_0.bind(this)));
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._text_12,
            this._text_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._text_17
        ], [disposable_0], []);
        return null;
    };
    _View_Category0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.Icon) && (7 === requestNodeIndex))) {
            return this._Icon_7_3;
        }
        if (((token === import15.Button) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._Button_5_4;
        }
        if (((token === import16.MenuToggle) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._MenuToggle_5_5;
        }
        if (((token === import17.ToolbarItem) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._ToolbarItem_5_6;
        }
        if (((token === import20.ToolbarTitle) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 11)))) {
            return this._ToolbarTitle_10_4;
        }
        if (((token === import14.Navbar) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._Navbar_3_4;
        }
        if (((token === import13.Header) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._Header_1_3;
        }
        if (((token === import21.Content) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 16)))) {
            return this._Content_15_4;
        }
        return notFoundResult;
    };
    _View_Category0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3 = '';
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this._MenuToggle_5_5.menuToggle = currVal_3;
            this._expr_3 = currVal_3;
        }
        var currVal_5 = 'menu';
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this._Icon_7_3.name = currVal_5;
            this._expr_5 = currVal_5;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._Content_15_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_Button_5_0.dirty) {
                this._query_Button_5_0.reset([this._Button_5_4]);
                this._ToolbarItem_5_6._buttons = this._query_Button_5_0;
                this._query_Button_5_0.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._Button_5_4.ngAfterContentInit();
            }
        }
        var currVal_0 = this._Navbar_3_4._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_3, 'hidden', currVal_0);
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this._Navbar_3_4._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementClass(this._el_3, 'statusbar-padding', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_4 = this._MenuToggle_5_5.isHidden;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementProperty(this._el_5, 'hidden', currVal_4);
            this._expr_4 = currVal_4;
        }
        var currVal_6 = this._Icon_7_3._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_7, 'hide', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = import4.interpolate(1, 'category ', this.context.title, '');
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setText(this._text_11, currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._Content_15_4._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_15, 'statusbar-padding', currVal_8);
            this._expr_8 = currVal_8;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Navbar_3_4.ngAfterViewInit();
            }
        }
    };
    _View_Category0.prototype.destroyInternal = function () {
        this._Icon_7_3.ngOnDestroy();
        this._Content_15_4.ngOnDestroy();
    };
    _View_Category0.prototype._handle_click_5_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._MenuToggle_5_5.toggle() !== false);
        return (true && pd_0);
    };
    return _View_Category0;
}(import1.AppView));
export function viewFactory_Category0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Category === null)) {
        (renderType_Category = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, styles_Category, {}));
    }
    return new _View_Category0(viewUtils, parentInjector, declarationEl);
}
