/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/alert/alert-component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/navigation/view-controller';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from 'ionic-angular/config/config';
import * as import11 from 'ionic-angular/navigation/nav-params';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from 'ionic-angular/components/backdrop/backdrop';
import * as import15 from '@angular/common/src/directives/ng_if';
import * as import16 from '@angular/common/src/directives/ng_class';
import * as import17 from '@angular/common/src/directives/ng_for';
import * as import18 from 'ionic-angular/gestures/gesture-controller';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import22 from '@angular/core/src/security';
import * as import23 from '@angular/common/src/directives/ng_switch';
import * as import24 from 'ionic-angular/components/button/button';
import * as import25 from '../button/button.ngfactory';
import * as import26 from '@angular/forms/src/directives/default_value_accessor';
import * as import27 from '@angular/forms/src/directives/ng_model';
import * as import28 from '@angular/forms/src/directives/ng_control_status';
import * as import29 from '@angular/forms/src/directives/control_value_accessor';
import * as import30 from '@angular/forms/src/directives/ng_control';
var renderType_AlertCmp_Host = null;
var _View_AlertCmp_Host0 = (function (_super) {
    __extends(_View_AlertCmp_Host0, _super);
    function _View_AlertCmp_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp_Host0, renderType_AlertCmp_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-alert', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'role', 'dialog');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_AlertCmp0(this.viewUtils, this.injector(0), this._appEl_0);
        this._AlertCmp_0_4 = new import3.AlertCmp(this.parentInjector.get(import8.ViewController), new import9.ElementRef(this._el_0), this.parentInjector.get(import10.Config), this.parentInjector.get(import11.NavParams), this.renderer);
        this._appEl_0.initComponent(this._AlertCmp_0_4, [], compView_0);
        compView_0.create(this._AlertCmp_0_4, this.projectableNodes, null);
        var disposable_0 = this.renderer.listenGlobal('body', 'keyup', this.eventHandler(this._handle_keyup_0_0.bind(this)));
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return this._appEl_0;
    };
    _View_AlertCmp_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.AlertCmp) && (0 === requestNodeIndex))) {
            return this._AlertCmp_0_4;
        }
        return notFoundResult;
    };
    _View_AlertCmp_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this._AlertCmp_0_4.hdrId;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-labelledby', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this._AlertCmp_0_4.descId;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-describedby', ((currVal_2 == null) ? null : currVal_2.toString()));
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AlertCmp_Host0.prototype._handle_keyup_0_0 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._AlertCmp_0_4.keyUp($event) !== false);
        return (true && pd_0);
    };
    return _View_AlertCmp_Host0;
}(import1.AppView));
function viewFactory_AlertCmp_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AlertCmp_Host === null)) {
        (renderType_AlertCmp_Host = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, [], {}));
    }
    return new _View_AlertCmp_Host0(viewUtils, parentInjector, declarationEl);
}
export var AlertCmpNgFactory = new import13.ComponentFactory('ion-alert', viewFactory_AlertCmp_Host0, import3.AlertCmp);
var styles_AlertCmp = [];
var renderType_AlertCmp = null;
var _View_AlertCmp0 = (function (_super) {
    __extends(_View_AlertCmp0, _super);
    function _View_AlertCmp0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp0, renderType_AlertCmp, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'ion-backdrop', null);
        this.renderer.setElementAttribute(this._el_0, 'disable-activated', '');
        this.renderer.setElementAttribute(this._el_0, 'role', 'presentation');
        this.renderer.setElementAttribute(this._el_0, 'tappable', '');
        this._Backdrop_0_3 = new import14.Backdrop(this.parentInjector.get(import18.GestureController), new import9.ElementRef(this._el_0), this.renderer);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'alert-wrapper');
        this._el_2 = this.renderer.createElement(this._el_1, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'alert-head');
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._appEl_3 = new import2.AppElement(3, 2, this, this._anchor_3);
        this._TemplateRef_3_5 = new import19.TemplateRef_(this._appEl_3, viewFactory_AlertCmp1);
        this._NgIf_3_6 = new import15.NgIf(this._appEl_3.vcRef, this._TemplateRef_3_5);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._appEl_4 = new import2.AppElement(4, 2, this, this._anchor_4);
        this._TemplateRef_4_5 = new import19.TemplateRef_(this._appEl_4, viewFactory_AlertCmp2);
        this._NgIf_4_6 = new import15.NgIf(this._appEl_4.vcRef, this._TemplateRef_4_5);
        this._el_5 = this.renderer.createElement(this._el_1, 'div', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'alert-message');
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._appEl_6 = new import2.AppElement(6, 1, this, this._anchor_6);
        this._TemplateRef_6_5 = new import19.TemplateRef_(this._appEl_6, viewFactory_AlertCmp3);
        this._NgIf_6_6 = new import15.NgIf(this._appEl_6.vcRef, this._TemplateRef_6_5);
        this._el_7 = this.renderer.createElement(this._el_1, 'div', null);
        this.renderer.setElementAttribute(this._el_7, 'class', 'alert-button-group');
        this._NgClass_7_3 = new import16.NgClass(this.parentInjector.get(import20.IterableDiffers), this.parentInjector.get(import21.KeyValueDiffers), new import9.ElementRef(this._el_7), this.renderer);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_7, null);
        this._appEl_8 = new import2.AppElement(8, 7, this, this._anchor_8);
        this._TemplateRef_8_5 = new import19.TemplateRef_(this._appEl_8, viewFactory_AlertCmp10);
        this._NgFor_8_6 = new import17.NgFor(this._appEl_8.vcRef, this._TemplateRef_8_5, this.parentInjector.get(import20.IterableDiffers), this.ref);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._map_0 = import4.pureProxy1(function (p0) {
            return { 'alert-button-group-vertical': p0 };
        });
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._el_1,
            this._el_2,
            this._anchor_3,
            this._anchor_4,
            this._el_5,
            this._anchor_6,
            this._el_7,
            this._anchor_8
        ], [disposable_0], []);
        return null;
    };
    _View_AlertCmp0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.Backdrop) && (0 === requestNodeIndex))) {
            return this._Backdrop_0_3;
        }
        if (((token === import19.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import15.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6;
        }
        if (((token === import19.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import15.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6;
        }
        if (((token === import19.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import15.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6;
        }
        if (((token === import19.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import17.NgFor) && (8 === requestNodeIndex))) {
            return this._NgFor_8_6;
        }
        if (((token === import16.NgClass) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._NgClass_7_3;
        }
        return notFoundResult;
    };
    _View_AlertCmp0.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._Backdrop_0_3.ngOnInit();
        }
        var currVal_1 = this.context.d.title;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgIf_3_6.ngIf = currVal_1;
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.d.subTitle;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgIf_4_6.ngIf = currVal_2;
            this._expr_2 = currVal_2;
        }
        var currVal_5 = this.context.d.inputs.length;
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this._NgIf_6_6.ngIf = currVal_5;
            this._expr_5 = currVal_5;
        }
        var currVal_6 = 'alert-button-group';
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this._NgClass_7_3.klass = currVal_6;
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this._map_0((this.context.d.buttons.length > 2));
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this._NgClass_7_3.ngClass = currVal_7;
            this._expr_7 = currVal_7;
        }
        if (!throwOnChange) {
            this._NgClass_7_3.ngDoCheck();
        }
        changes = null;
        var currVal_8 = this.context.d.buttons;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this._NgFor_8_6.ngForOf = currVal_8;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_8, currVal_8);
            this._expr_8 = currVal_8;
        }
        if ((changes !== null)) {
            this._NgFor_8_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_8_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = import4.interpolate(1, '', this.context.msgId, '');
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementProperty(this._el_5, 'id', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context.d.message;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementProperty(this._el_5, 'innerHTML', this.viewUtils.sanitizer.sanitize(import22.SecurityContext.HTML, currVal_4));
            this._expr_4 = currVal_4;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AlertCmp0.prototype.destroyInternal = function () {
        this._Backdrop_0_3.ngOnDestroy();
    };
    _View_AlertCmp0.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.bdClick() !== false);
        return (true && pd_0);
    };
    return _View_AlertCmp0;
}(import1.AppView));
export function viewFactory_AlertCmp0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AlertCmp === null)) {
        (renderType_AlertCmp = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, styles_AlertCmp, {}));
    }
    return new _View_AlertCmp0(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp1 = (function (_super) {
    __extends(_View_AlertCmp1, _super);
    function _View_AlertCmp1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp1, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'h2', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-title');
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return null;
    };
    _View_AlertCmp1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '', this.parent.context.hdrId, '');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'id', currVal_0);
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.parent.context.d.title;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import22.SecurityContext.HTML, currVal_1));
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AlertCmp1;
}(import1.AppView));
function viewFactory_AlertCmp1(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp1(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp2 = (function (_super) {
    __extends(_View_AlertCmp2, _super);
    function _View_AlertCmp2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp2, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'h3', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-sub-title');
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return null;
    };
    _View_AlertCmp2.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '', this.parent.context.subHdrId, '');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'id', currVal_0);
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.parent.context.d.subTitle;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import22.SecurityContext.HTML, currVal_1));
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AlertCmp2;
}(import1.AppView));
function viewFactory_AlertCmp2(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp2(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp3 = (function (_super) {
    __extends(_View_AlertCmp3, _super);
    function _View_AlertCmp3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp3, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp3.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this._NgSwitch_0_3 = new import23.NgSwitch();
        this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_1 = new import2.AppElement(1, 0, this, this._anchor_1);
        this._TemplateRef_1_5 = new import19.TemplateRef_(this._appEl_1, viewFactory_AlertCmp4);
        this._NgSwitchCase_1_6 = new import23.NgSwitchCase(this._appEl_1.vcRef, this._TemplateRef_1_5, this._NgSwitch_0_3);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import19.TemplateRef_(this._appEl_2, viewFactory_AlertCmp6);
        this._NgSwitchCase_2_6 = new import23.NgSwitchCase(this._appEl_2.vcRef, this._TemplateRef_2_5, this._NgSwitch_0_3);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_3 = new import2.AppElement(3, 0, this, this._anchor_3);
        this._TemplateRef_3_5 = new import19.TemplateRef_(this._appEl_3, viewFactory_AlertCmp8);
        this._NgSwitchDefault_3_6 = new import23.NgSwitchDefault(this._appEl_3.vcRef, this._TemplateRef_3_5, this._NgSwitch_0_3);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._anchor_1,
            this._anchor_2,
            this._anchor_3
        ], [], []);
        return null;
    };
    _View_AlertCmp3.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import23.NgSwitchCase) && (1 === requestNodeIndex))) {
            return this._NgSwitchCase_1_6;
        }
        if (((token === import19.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import23.NgSwitchCase) && (2 === requestNodeIndex))) {
            return this._NgSwitchCase_2_6;
        }
        if (((token === import19.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import23.NgSwitchDefault) && (3 === requestNodeIndex))) {
            return this._NgSwitchDefault_3_6;
        }
        if (((token === import23.NgSwitch) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._NgSwitch_0_3;
        }
        return notFoundResult;
    };
    _View_AlertCmp3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.parent.context.inputType;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgSwitch_0_3.ngSwitch = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_1 = 'radio';
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgSwitchCase_1_6.ngSwitchCase = currVal_1;
            this._expr_1 = currVal_1;
        }
        var currVal_2 = 'checkbox';
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgSwitchCase_2_6.ngSwitchCase = currVal_2;
            this._expr_2 = currVal_2;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AlertCmp3;
}(import1.AppView));
function viewFactory_AlertCmp3(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp3(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp4 = (function (_super) {
    __extends(_View_AlertCmp4, _super);
    function _View_AlertCmp4(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp4, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp4.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-radio-group');
        this.renderer.setElementAttribute(this._el_0, 'role', 'radiogroup');
        this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_1 = new import2.AppElement(1, 0, this, this._anchor_1);
        this._TemplateRef_1_5 = new import19.TemplateRef_(this._appEl_1, viewFactory_AlertCmp5);
        this._NgFor_1_6 = new import17.NgFor(this._appEl_1.vcRef, this._TemplateRef_1_5, this.parent.parent.parentInjector.get(import20.IterableDiffers), this.parent.parent.ref);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._anchor_1
        ], [], []);
        return null;
    };
    _View_AlertCmp4.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import17.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6;
        }
        return notFoundResult;
    };
    _View_AlertCmp4.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_2 = this.parent.parent.context.d.inputs;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgFor_1_6.ngForOf = currVal_2;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_2, currVal_2);
            this._expr_2 = currVal_2;
        }
        if ((changes !== null)) {
            this._NgFor_1_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_1_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.parent.parent.context.hdrId;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-labelledby', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.parent.parent.context.activeId;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-activedescendant', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AlertCmp4;
}(import1.AppView));
function viewFactory_AlertCmp4(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp4(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp5 = (function (_super) {
    __extends(_View_AlertCmp5, _super);
    function _View_AlertCmp5(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp5, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp5.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-tappable alert-radio');
        this.renderer.setElementAttribute(this._el_0, 'ion-button', 'alert-radio-button');
        this.renderer.setElementAttribute(this._el_0, 'role', 'radio');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = import25.viewFactory_Button0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Button_0_4 = new import24.Button(null, 'alert-radio-button', this.parent.parent.parent.parentInjector.get(import10.Config), new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Button_0_4, [], compView_0);
        this._el_1 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'alert-radio-icon');
        this._el_2 = this.renderer.createElement(this._el_1, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'alert-radio-inner');
        this._el_3 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'alert-radio-label');
        this._text_4 = this.renderer.createText(this._el_3, '', null);
        compView_0.create(this._Button_0_4, [[].concat([
                this._el_1,
                this._el_3
            ])], null);
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_4 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._el_1,
            this._el_2,
            this._el_3,
            this._text_4
        ], [disposable_0], []);
        return null;
    };
    _View_AlertCmp5.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._Button_0_4;
        }
        return notFoundResult;
    };
    _View_AlertCmp5.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_0_4.ngAfterContentInit();
            }
        }
        var currVal_1 = this.context.$implicit.checked;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-checked', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.$implicit.disabled;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'disabled', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = this.context.$implicit.id;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementAttribute(this._el_0, 'id', ((currVal_3 == null) ? null : currVal_3.toString()));
            this._expr_3 = currVal_3;
        }
        var currVal_4 = import4.interpolate(1, '', this.context.$implicit.label, '');
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_4, currVal_4);
            this._expr_4 = currVal_4;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AlertCmp5.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.parent.parent.context.rbClick(this.context.$implicit) !== false);
        return (true && pd_0);
    };
    return _View_AlertCmp5;
}(import1.AppView));
function viewFactory_AlertCmp5(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp5(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp6 = (function (_super) {
    __extends(_View_AlertCmp6, _super);
    function _View_AlertCmp6(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp6, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp6.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-checkbox-group');
        this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_1 = new import2.AppElement(1, 0, this, this._anchor_1);
        this._TemplateRef_1_5 = new import19.TemplateRef_(this._appEl_1, viewFactory_AlertCmp7);
        this._NgFor_1_6 = new import17.NgFor(this._appEl_1.vcRef, this._TemplateRef_1_5, this.parent.parent.parentInjector.get(import20.IterableDiffers), this.parent.parent.ref);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._anchor_1
        ], [], []);
        return null;
    };
    _View_AlertCmp6.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import17.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6;
        }
        return notFoundResult;
    };
    _View_AlertCmp6.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_0 = this.parent.parent.context.d.inputs;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_1_6.ngForOf = currVal_0;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        if ((changes !== null)) {
            this._NgFor_1_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_1_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AlertCmp6;
}(import1.AppView));
function viewFactory_AlertCmp6(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp6(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp7 = (function (_super) {
    __extends(_View_AlertCmp7, _super);
    function _View_AlertCmp7(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp7, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp7.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-tappable alert-checkbox');
        this.renderer.setElementAttribute(this._el_0, 'ion-button', 'alert-checkbox-button');
        this.renderer.setElementAttribute(this._el_0, 'role', 'checkbox');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = import25.viewFactory_Button0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Button_0_4 = new import24.Button(null, 'alert-checkbox-button', this.parent.parent.parent.parentInjector.get(import10.Config), new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Button_0_4, [], compView_0);
        this._el_1 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'alert-checkbox-icon');
        this._el_2 = this.renderer.createElement(this._el_1, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'alert-checkbox-inner');
        this._el_3 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'alert-checkbox-label');
        this._text_4 = this.renderer.createText(this._el_3, '', null);
        compView_0.create(this._Button_0_4, [[].concat([
                this._el_1,
                this._el_3
            ])], null);
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_3 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._el_1,
            this._el_2,
            this._el_3,
            this._text_4
        ], [disposable_0], []);
        return null;
    };
    _View_AlertCmp7.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._Button_0_4;
        }
        return notFoundResult;
    };
    _View_AlertCmp7.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_0_4.ngAfterContentInit();
            }
        }
        var currVal_1 = this.context.$implicit.checked;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-checked', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.$implicit.disabled;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'disabled', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = import4.interpolate(1, '', this.context.$implicit.label, '');
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_4, currVal_3);
            this._expr_3 = currVal_3;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AlertCmp7.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.parent.parent.context.cbClick(this.context.$implicit) !== false);
        return (true && pd_0);
    };
    return _View_AlertCmp7;
}(import1.AppView));
function viewFactory_AlertCmp7(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp7(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp8 = (function (_super) {
    __extends(_View_AlertCmp8, _super);
    function _View_AlertCmp8(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp8, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp8.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-input-group');
        this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_1 = new import2.AppElement(1, 0, this, this._anchor_1);
        this._TemplateRef_1_5 = new import19.TemplateRef_(this._appEl_1, viewFactory_AlertCmp9);
        this._NgFor_1_6 = new import17.NgFor(this._appEl_1.vcRef, this._TemplateRef_1_5, this.parent.parent.parentInjector.get(import20.IterableDiffers), this.parent.parent.ref);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._anchor_1
        ], [], []);
        return null;
    };
    _View_AlertCmp8.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import17.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6;
        }
        return notFoundResult;
    };
    _View_AlertCmp8.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_0 = this.parent.parent.context.d.inputs;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_1_6.ngForOf = currVal_0;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        if ((changes !== null)) {
            this._NgFor_1_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_1_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AlertCmp8;
}(import1.AppView));
function viewFactory_AlertCmp8(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp8(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp9 = (function (_super) {
    __extends(_View_AlertCmp9, _super);
    function _View_AlertCmp9(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp9, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp9.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'alert-input-wrapper');
        this._el_1 = this.renderer.createElement(this._el_0, 'input', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'alert-input');
        this._DefaultValueAccessor_1_3 = new import26.DefaultValueAccessor(this.renderer, new import9.ElementRef(this._el_1));
        this._NG_VALUE_ACCESSOR_1_4 = [this._DefaultValueAccessor_1_3];
        this._NgModel_1_5 = new import27.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_1_4);
        this._NgControl_1_6 = this._NgModel_1_5;
        this._NgControlStatus_1_7 = new import28.NgControlStatus(this._NgControl_1_6);
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_1, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_1_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_1, 'input', this.eventHandler(this._handle_input_1_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_1, 'blur', this.eventHandler(this._handle_blur_1_2.bind(this)));
        this._expr_5 = import7.UNINITIALIZED;
        var subscription_0 = this._NgModel_1_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_1_0.bind(this)));
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this._expr_9 = import7.UNINITIALIZED;
        this._expr_10 = import7.UNINITIALIZED;
        this._expr_11 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._el_1
        ], [
            disposable_0,
            disposable_1,
            disposable_2
        ], [subscription_0]);
        return null;
    };
    _View_AlertCmp9.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import26.DefaultValueAccessor) && (1 === requestNodeIndex))) {
            return this._DefaultValueAccessor_1_3;
        }
        if (((token === import29.NG_VALUE_ACCESSOR) && (1 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_1_4;
        }
        if (((token === import27.NgModel) && (1 === requestNodeIndex))) {
            return this._NgModel_1_5;
        }
        if (((token === import30.NgControl) && (1 === requestNodeIndex))) {
            return this._NgControl_1_6;
        }
        if (((token === import28.NgControlStatus) && (1 === requestNodeIndex))) {
            return this._NgControlStatus_1_7;
        }
        return notFoundResult;
    };
    _View_AlertCmp9.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_5 = this.context.$implicit.value;
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this._NgModel_1_5.model = currVal_5;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_5, currVal_5);
            this._expr_5 = currVal_5;
        }
        if ((changes !== null)) {
            this._NgModel_1_5.ngOnChanges(changes);
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = this.context.$implicit.placeholder;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementProperty(this._el_1, 'placeholder', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context.$implicit.type;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementProperty(this._el_1, 'type', currVal_4);
            this._expr_4 = currVal_4;
        }
        var currVal_6 = this._NgControlStatus_1_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_1, 'ng-untouched', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this._NgControlStatus_1_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_1, 'ng-touched', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._NgControlStatus_1_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_1, 'ng-pristine', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this._NgControlStatus_1_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_1, 'ng-dirty', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this._NgControlStatus_1_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementClass(this._el_1, 'ng-valid', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this._NgControlStatus_1_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setElementClass(this._el_1, 'ng-invalid', currVal_11);
            this._expr_11 = currVal_11;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AlertCmp9.prototype.destroyInternal = function () {
        this._NgModel_1_5.ngOnDestroy();
    };
    _View_AlertCmp9.prototype._handle_ngModelChange_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.$implicit.value = $event) !== false);
        return (true && pd_0);
    };
    _View_AlertCmp9.prototype._handle_input_1_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_1_3.onChange($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_AlertCmp9.prototype._handle_blur_1_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_1_3.onTouched() !== false);
        return (true && pd_0);
    };
    return _View_AlertCmp9;
}(import1.AppView));
function viewFactory_AlertCmp9(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp9(viewUtils, parentInjector, declarationEl);
}
var _View_AlertCmp10 = (function (_super) {
    __extends(_View_AlertCmp10, _super);
    function _View_AlertCmp10(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AlertCmp10, renderType_AlertCmp, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AlertCmp10.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'ion-button', 'alert-button');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = import25.viewFactory_Button0(this.viewUtils, this.injector(0), this._appEl_0);
        this._NgClass_0_4 = new import16.NgClass(this.parent.parentInjector.get(import20.IterableDiffers), this.parent.parentInjector.get(import21.KeyValueDiffers), new import9.ElementRef(this._el_0), this.renderer);
        this._Button_0_5 = new import24.Button(null, 'alert-button', this.parent.parentInjector.get(import10.Config), new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Button_0_5, [], compView_0);
        this._text_1 = this.renderer.createText(null, '', null);
        compView_0.create(this._Button_0_5, [[].concat([this._text_1])], null);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [disposable_0], []);
        return null;
    };
    _View_AlertCmp10.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgClass_0_4;
        }
        if (((token === import24.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._Button_0_5;
        }
        return notFoundResult;
    };
    _View_AlertCmp10.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.$implicit.cssClass;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgClass_0_4.ngClass = currVal_1;
            this._expr_1 = currVal_1;
        }
        if (!throwOnChange) {
            this._NgClass_0_4.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_0_5.ngAfterContentInit();
            }
        }
        var currVal_2 = import4.interpolate(1, '', this.context.$implicit.text, '');
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AlertCmp10.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.btnClick(this.context.$implicit) !== false);
        return (true && pd_0);
    };
    return _View_AlertCmp10;
}(import1.AppView));
function viewFactory_AlertCmp10(viewUtils, parentInjector, declarationEl) {
    return new _View_AlertCmp10(viewUtils, parentInjector, declarationEl);
}
