/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/toolbar/toolbar';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/navigation/view-controller';
import * as import9 from 'ionic-angular/config/config';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from '@angular/common/src/directives/ng_class';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/core/src/change_detection/differs/keyvalue_differs';
var renderType_Toolbar_Host = null;
var _View_Toolbar_Host0 = (function (_super) {
    __extends(_View_Toolbar_Host0, _super);
    function _View_Toolbar_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Toolbar_Host0, renderType_Toolbar_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Toolbar_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-toolbar', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'toolbar');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Toolbar0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Toolbar_0_4 = new import3.Toolbar(this.parentInjector.get(import8.ViewController, null), this.parentInjector.get(import9.Config), new import10.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Toolbar_0_4, [], compView_0);
        compView_0.create(this._Toolbar_0_4, this.projectableNodes, null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_Toolbar_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.Toolbar) && (0 === requestNodeIndex))) {
            return this._Toolbar_0_4;
        }
        return notFoundResult;
    };
    _View_Toolbar_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._Toolbar_0_4._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementClass(this._el_0, 'statusbar-padding', currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Toolbar_Host0;
}(import1.AppView));
function viewFactory_Toolbar_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Toolbar_Host === null)) {
        (renderType_Toolbar_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_Toolbar_Host0(viewUtils, parentInjector, declarationEl);
}
export var ToolbarNgFactory = new import12.ComponentFactory('ion-toolbar', viewFactory_Toolbar_Host0, import3.Toolbar);
var styles_Toolbar = [];
var renderType_Toolbar = null;
var _View_Toolbar0 = (function (_super) {
    __extends(_View_Toolbar0, _super);
    function _View_Toolbar0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Toolbar0, renderType_Toolbar, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckOnce);
    }
    _View_Toolbar0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'toolbar-background');
        this._NgClass_0_3 = new import13.NgClass(this.parentInjector.get(import14.IterableDiffers), this.parentInjector.get(import15.KeyValueDiffers), new import10.ElementRef(this._el_0), this.renderer);
        this.renderer.projectNodes(parentRenderNode, import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this.renderer.projectNodes(parentRenderNode, import4.flattenNestedViewRenderNodes(this.projectableNodes[1]));
        this.renderer.projectNodes(parentRenderNode, import4.flattenNestedViewRenderNodes(this.projectableNodes[2]));
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'toolbar-content');
        this._NgClass_1_3 = new import13.NgClass(this.parentInjector.get(import14.IterableDiffers), this.parentInjector.get(import15.KeyValueDiffers), new import10.ElementRef(this._el_1), this.renderer);
        this.renderer.projectNodes(this._el_1, import4.flattenNestedViewRenderNodes(this.projectableNodes[3]));
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._el_1
        ], [], []);
        return null;
    };
    _View_Toolbar0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3;
        }
        if (((token === import13.NgClass) && (1 === requestNodeIndex))) {
            return this._NgClass_1_3;
        }
        return notFoundResult;
    };
    _View_Toolbar0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'toolbar-background';
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgClass_0_3.klass = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_1 = ('toolbar-background-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgClass_0_3.ngClass = currVal_1;
            this._expr_1 = currVal_1;
        }
        if (!throwOnChange) {
            this._NgClass_0_3.ngDoCheck();
        }
        var currVal_2 = 'toolbar-content';
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgClass_1_3.klass = currVal_2;
            this._expr_2 = currVal_2;
        }
        var currVal_3 = ('toolbar-content-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this._NgClass_1_3.ngClass = currVal_3;
            this._expr_3 = currVal_3;
        }
        if (!throwOnChange) {
            this._NgClass_1_3.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Toolbar0;
}(import1.AppView));
export function viewFactory_Toolbar0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Toolbar === null)) {
        (renderType_Toolbar = viewUtils.createRenderComponentType('', 4, import11.ViewEncapsulation.None, styles_Toolbar, {}));
    }
    return new _View_Toolbar0(viewUtils, parentInjector, declarationEl);
}
