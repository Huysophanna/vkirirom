/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/navbar/navbar';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/components/app/app';
import * as import9 from 'ionic-angular/navigation/view-controller';
import * as import10 from 'ionic-angular/navigation/nav-controller';
import * as import11 from 'ionic-angular/config/config';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '@angular/common/src/directives/ng_class';
import * as import17 from 'ionic-angular/components/button/button';
import * as import18 from 'ionic-angular/components/icon/icon';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import21 from '../button/button.ngfactory';
var renderType_Navbar_Host = null;
var _View_Navbar_Host0 = (function (_super) {
    __extends(_View_Navbar_Host0, _super);
    function _View_Navbar_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Navbar_Host0, renderType_Navbar_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Navbar_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-navbar', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'toolbar');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Navbar0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Navbar_0_4 = new import3.Navbar(this.parentInjector.get(import8.App), this.parentInjector.get(import9.ViewController, null), this.parentInjector.get(import10.NavController, null), this.parentInjector.get(import11.Config), new import12.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Navbar_0_4, [], compView_0);
        compView_0.create(this._Navbar_0_4, this.projectableNodes, null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_Navbar_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.Navbar) && (0 === requestNodeIndex))) {
            return this._Navbar_0_4;
        }
        return notFoundResult;
    };
    _View_Navbar_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._Navbar_0_4._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'hidden', currVal_0);
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this._Navbar_0_4._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementClass(this._el_0, 'statusbar-padding', currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Navbar_0_4.ngAfterViewInit();
            }
        }
    };
    return _View_Navbar_Host0;
}(import1.AppView));
function viewFactory_Navbar_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Navbar_Host === null)) {
        (renderType_Navbar_Host = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, [], {}));
    }
    return new _View_Navbar_Host0(viewUtils, parentInjector, declarationEl);
}
export var NavbarNgFactory = new import14.ComponentFactory('ion-navbar', viewFactory_Navbar_Host0, import3.Navbar);
var styles_Navbar = [];
var renderType_Navbar = null;
var _View_Navbar0 = (function (_super) {
    __extends(_View_Navbar0, _super);
    function _View_Navbar0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Navbar0, renderType_Navbar, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Navbar0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_bbTxt_0 = new import15.QueryList();
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'toolbar-background');
        this._NgClass_0_3 = new import16.NgClass(this.parentInjector.get(import19.IterableDiffers), this.parentInjector.get(import20.KeyValueDiffers), new import12.ElementRef(this._el_0), this.renderer);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'button', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'back-button');
        this.renderer.setElementAttribute(this._el_1, 'ion-button', 'bar-button');
        this._appEl_1 = new import2.AppElement(1, null, this, this._el_1);
        var compView_1 = import21.viewFactory_Button0(this.viewUtils, this.injector(1), this._appEl_1);
        this._NgClass_1_4 = new import16.NgClass(this.parentInjector.get(import19.IterableDiffers), this.parentInjector.get(import20.KeyValueDiffers), new import12.ElementRef(this._el_1), this.renderer);
        this._Button_1_5 = new import17.Button(null, 'bar-button', this.parentInjector.get(import11.Config), new import12.ElementRef(this._el_1), this.renderer);
        this._appEl_1.initComponent(this._Button_1_5, [], compView_1);
        this._el_2 = this.renderer.createElement(null, 'span', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'button-inner');
        this._el_3 = this.renderer.createElement(this._el_2, 'ion-icon', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'back-button-icon');
        this.renderer.setElementAttribute(this._el_3, 'role', 'img');
        this._NgClass_3_3 = new import16.NgClass(this.parentInjector.get(import19.IterableDiffers), this.parentInjector.get(import20.KeyValueDiffers), new import12.ElementRef(this._el_3), this.renderer);
        this._Icon_3_4 = new import18.Icon(this.parentInjector.get(import11.Config), new import12.ElementRef(this._el_3), this.renderer);
        this._el_4 = this.renderer.createElement(this._el_2, 'span', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'back-button-text');
        this._NgClass_4_3 = new import16.NgClass(this.parentInjector.get(import19.IterableDiffers), this.parentInjector.get(import20.KeyValueDiffers), new import12.ElementRef(this._el_4), this.renderer);
        compView_1.create(this._Button_1_5, [[].concat([this._el_2])], null);
        this.renderer.projectNodes(parentRenderNode, import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this.renderer.projectNodes(parentRenderNode, import4.flattenNestedViewRenderNodes(this.projectableNodes[1]));
        this.renderer.projectNodes(parentRenderNode, import4.flattenNestedViewRenderNodes(this.projectableNodes[2]));
        this._el_5 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'toolbar-content');
        this._NgClass_5_3 = new import16.NgClass(this.parentInjector.get(import19.IterableDiffers), this.parentInjector.get(import20.KeyValueDiffers), new import12.ElementRef(this._el_5), this.renderer);
        this.renderer.projectNodes(this._el_5, import4.flattenNestedViewRenderNodes(this.projectableNodes[3]));
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_1, 'click', this.eventHandler(this._handle_click_1_0.bind(this)));
        this._expr_4 = import7.UNINITIALIZED;
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this._expr_9 = import7.UNINITIALIZED;
        this._expr_10 = import7.UNINITIALIZED;
        this._expr_11 = import7.UNINITIALIZED;
        this._expr_12 = import7.UNINITIALIZED;
        this._expr_13 = import7.UNINITIALIZED;
        this._viewQuery_bbTxt_0.reset([new import12.ElementRef(this._el_4)]);
        this.context._bbTxt = this._viewQuery_bbTxt_0.first;
        this.init([], [
            this._el_0,
            this._el_1,
            this._el_2,
            this._el_3,
            this._el_4,
            this._el_5
        ], [disposable_0], []);
        return null;
    };
    _View_Navbar0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3;
        }
        if (((token === import16.NgClass) && (3 === requestNodeIndex))) {
            return this._NgClass_3_3;
        }
        if (((token === import18.Icon) && (3 === requestNodeIndex))) {
            return this._Icon_3_4;
        }
        if (((token === import16.NgClass) && (4 === requestNodeIndex))) {
            return this._NgClass_4_3;
        }
        if (((token === import16.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgClass_1_4;
        }
        if (((token === import17.Button) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._Button_1_5;
        }
        if (((token === import16.NgClass) && (5 === requestNodeIndex))) {
            return this._NgClass_5_3;
        }
        return notFoundResult;
    };
    _View_Navbar0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'toolbar-background';
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgClass_0_3.klass = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_1 = ('toolbar-background-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgClass_0_3.ngClass = currVal_1;
            this._expr_1 = currVal_1;
        }
        if (!throwOnChange) {
            this._NgClass_0_3.ngDoCheck();
        }
        var currVal_4 = 'back-button';
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this._NgClass_1_4.klass = currVal_4;
            this._expr_4 = currVal_4;
        }
        var currVal_5 = ('back-button-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this._NgClass_1_4.ngClass = currVal_5;
            this._expr_5 = currVal_5;
        }
        if (!throwOnChange) {
            this._NgClass_1_4.ngDoCheck();
        }
        var currVal_6 = 'back-button-icon';
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this._NgClass_3_3.klass = currVal_6;
            this._expr_6 = currVal_6;
        }
        var currVal_7 = ('back-button-icon-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this._NgClass_3_3.ngClass = currVal_7;
            this._expr_7 = currVal_7;
        }
        if (!throwOnChange) {
            this._NgClass_3_3.ngDoCheck();
        }
        var currVal_8 = this.context._bbIcon;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this._Icon_3_4.name = currVal_8;
            this._expr_8 = currVal_8;
        }
        var currVal_10 = 'back-button-text';
        if (import4.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this._NgClass_4_3.klass = currVal_10;
            this._expr_10 = currVal_10;
        }
        var currVal_11 = ('back-button-text-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this._NgClass_4_3.ngClass = currVal_11;
            this._expr_11 = currVal_11;
        }
        if (!throwOnChange) {
            this._NgClass_4_3.ngDoCheck();
        }
        var currVal_12 = 'toolbar-content';
        if (import4.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this._NgClass_5_3.klass = currVal_12;
            this._expr_12 = currVal_12;
        }
        var currVal_13 = ('toolbar-content-' + this.context._mode);
        if (import4.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this._NgClass_5_3.ngClass = currVal_13;
            this._expr_13 = currVal_13;
        }
        if (!throwOnChange) {
            this._NgClass_5_3.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_1_5.ngAfterContentInit();
            }
        }
        var currVal_3 = this.context._hideBb;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementProperty(this._el_1, 'hidden', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_9 = this._Icon_3_4._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_3, 'hide', currVal_9);
            this._expr_9 = currVal_9;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_Navbar0.prototype.destroyInternal = function () {
        this._Icon_3_4.ngOnDestroy();
    };
    _View_Navbar0.prototype._handle_click_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.backButtonClick($event) !== false);
        return (true && pd_0);
    };
    return _View_Navbar0;
}(import1.AppView));
export function viewFactory_Navbar0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Navbar === null)) {
        (renderType_Navbar = viewUtils.createRenderComponentType('', 4, import13.ViewEncapsulation.None, styles_Navbar, {}));
    }
    return new _View_Navbar0(viewUtils, parentInjector, declarationEl);
}
