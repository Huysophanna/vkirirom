/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/button/button';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
var renderType_Button_Host:import0.RenderComponentType = (null as any);
class _View_Button_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _Button_0_4:import3.Button;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_Button_Host0,renderType_Button_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('div',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'ion-button','');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Button0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Button_0_4 = new import3.Button((null as any),'',this.parentInjector.get(import8.Config),new import9.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._Button_0_4,([] as any[]),compView_0);
    compView_0.create(this._Button_0_4,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.Button) && (0 === requestNodeIndex))) { return this._Button_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Button_0_4.ngAfterContentInit(); } }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Button_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_Button_Host === (null as any))) { (renderType_Button_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Button_Host0(viewUtils,parentInjector,declarationEl);
}
export const ButtonNgFactory:import11.ComponentFactory<import3.Button> = new import11.ComponentFactory<import3.Button>('[ion-button]',viewFactory_Button_Host0,import3.Button);
const styles_Button:any[] = ([] as any[]);
var renderType_Button:import0.RenderComponentType = (null as any);
class _View_Button0 extends import1.AppView<import3.Button> {
  _el_0:any;
  _el_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_Button0,renderType_Button,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'span',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','button-inner');
    this.renderer.projectNodes(this._el_0,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','button-effect');
    this.init(([] as any[]),[
      this._el_0,
      this._el_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
}
export function viewFactory_Button0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.Button> {
  if ((renderType_Button === (null as any))) { (renderType_Button = viewUtils.createRenderComponentType('',1,import10.ViewEncapsulation.None,styles_Button,{})); }
  return new _View_Button0(viewUtils,parentInjector,declarationEl);
}