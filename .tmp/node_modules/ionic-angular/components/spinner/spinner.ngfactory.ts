/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/spinner/spinner';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/common/src/directives/ng_style';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
var renderType_Spinner_Host:import0.RenderComponentType = (null as any);
class _View_Spinner_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _Spinner_0_4:import3.Spinner;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_Spinner_Host0,renderType_Spinner_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-spinner',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Spinner0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Spinner_0_4 = new import3.Spinner(this.parentInjector.get(import8.Config),new import9.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._Spinner_0_4,([] as any[]),compView_0);
    compView_0.create(this._Spinner_0_4,this.projectableNodes,(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.Spinner) && (0 === requestNodeIndex))) { return this._Spinner_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._Spinner_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._Spinner_0_4.paused;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'spinner-paused',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Spinner_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_Spinner_Host === (null as any))) { (renderType_Spinner_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Spinner_Host0(viewUtils,parentInjector,declarationEl);
}
export const SpinnerNgFactory:import11.ComponentFactory<import3.Spinner> = new import11.ComponentFactory<import3.Spinner>('ion-spinner',viewFactory_Spinner_Host0,import3.Spinner);
const styles_Spinner:any[] = ([] as any[]);
var renderType_Spinner:import0.RenderComponentType = (null as any);
class _View_Spinner0 extends import1.AppView<import3.Spinner> {
  _anchor_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TemplateRef_0_5:any;
  _NgFor_0_6:import12.NgFor;
  _anchor_1:any;
  /*private*/ _appEl_1:import2.AppElement;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import12.NgFor;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_Spinner0,renderType_Spinner,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import13.TemplateRef_(this._appEl_0,viewFactory_Spinner1);
    this._NgFor_0_6 = new import12.NgFor(this._appEl_0.vcRef,this._TemplateRef_0_5,this.parentInjector.get(import14.IterableDiffers),this.ref);
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_1 = new import2.AppElement(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import13.TemplateRef_(this._appEl_1,viewFactory_Spinner2);
    this._NgFor_1_6 = new import12.NgFor(this._appEl_1.vcRef,this._TemplateRef_1_5,this.parentInjector.get(import14.IterableDiffers),this.ref);
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init(([] as any[]),[
      this._anchor_0,
      this._anchor_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import12.NgFor) && (0 === requestNodeIndex))) { return this._NgFor_0_6; }
    if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import12.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this.context._c;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_0_6.ngForOf = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    if ((changes !== (null as any))) { this._NgFor_0_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_0_6.ngDoCheck(); }
    changes = (null as any);
    const currVal_1:any = this.context._l;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgFor_1_6.ngForOf = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgFor_1_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_1_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_Spinner0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.Spinner> {
  if ((renderType_Spinner === (null as any))) { (renderType_Spinner = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_Spinner,{})); }
  return new _View_Spinner0(viewUtils,parentInjector,declarationEl);
}
class _View_Spinner1 extends import1.AppView<any> {
  _el_0:any;
  _NgStyle_0_3:import15.NgStyle;
  _el_1:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_Spinner1,renderType_Spinner,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),':svg:svg',(null as any));
    this.renderer.setElementAttribute(this._el_0,'viewBox','0 0 64 64');
    this._NgStyle_0_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers),new import9.ElementRef(this._el_0),this.renderer);
    this._el_1 = this.renderer.createElement(this._el_0,':svg:circle',(null as any));
    this.renderer.setElementAttribute(this._el_1,'transform','translate(32,32)');
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._el_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgStyle_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.$implicit.style;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgStyle_0_3.ngStyle = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (!throwOnChange) { this._NgStyle_0_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.context.$implicit.r;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementAttribute(this._el_1,'r',((currVal_1 == (null as any))? (null as any): currVal_1.toString()));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Spinner1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_Spinner1(viewUtils,parentInjector,declarationEl);
}
class _View_Spinner2 extends import1.AppView<any> {
  _el_0:any;
  _NgStyle_0_3:import15.NgStyle;
  _el_1:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_Spinner2,renderType_Spinner,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),':svg:svg',(null as any));
    this.renderer.setElementAttribute(this._el_0,'viewBox','0 0 64 64');
    this._NgStyle_0_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers),new import9.ElementRef(this._el_0),this.renderer);
    this._el_1 = this.renderer.createElement(this._el_0,':svg:line',(null as any));
    this.renderer.setElementAttribute(this._el_1,'transform','translate(32,32)');
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._el_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgStyle_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.$implicit.style;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgStyle_0_3.ngStyle = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (!throwOnChange) { this._NgStyle_0_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.context.$implicit.y1;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementAttribute(this._el_1,'y1',((currVal_1 == (null as any))? (null as any): currVal_1.toString()));
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context.$implicit.y2;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementAttribute(this._el_1,'y2',((currVal_2 == (null as any))? (null as any): currVal_2.toString()));
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Spinner2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_Spinner2(viewUtils,parentInjector,declarationEl);
}