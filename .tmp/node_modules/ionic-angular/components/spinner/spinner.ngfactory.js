/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/spinner/spinner';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/common/src/directives/ng_style';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
var renderType_Spinner_Host = null;
var _View_Spinner_Host0 = (function (_super) {
    __extends(_View_Spinner_Host0, _super);
    function _View_Spinner_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Spinner_Host0, renderType_Spinner_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Spinner_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-spinner', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Spinner0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Spinner_0_4 = new import3.Spinner(this.parentInjector.get(import8.Config), new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Spinner_0_4, [], compView_0);
        compView_0.create(this._Spinner_0_4, this.projectableNodes, null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_Spinner_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.Spinner) && (0 === requestNodeIndex))) {
            return this._Spinner_0_4;
        }
        return notFoundResult;
    };
    _View_Spinner_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._Spinner_0_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._Spinner_0_4.paused;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementClass(this._el_0, 'spinner-paused', currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Spinner_Host0;
}(import1.AppView));
function viewFactory_Spinner_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Spinner_Host === null)) {
        (renderType_Spinner_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_Spinner_Host0(viewUtils, parentInjector, declarationEl);
}
export var SpinnerNgFactory = new import11.ComponentFactory('ion-spinner', viewFactory_Spinner_Host0, import3.Spinner);
var styles_Spinner = [];
var renderType_Spinner = null;
var _View_Spinner0 = (function (_super) {
    __extends(_View_Spinner0, _super);
    function _View_Spinner0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Spinner0, renderType_Spinner, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckOnce);
    }
    _View_Spinner0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import13.TemplateRef_(this._appEl_0, viewFactory_Spinner1);
        this._NgFor_0_6 = new import12.NgFor(this._appEl_0.vcRef, this._TemplateRef_0_5, this.parentInjector.get(import14.IterableDiffers), this.ref);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_1 = new import2.AppElement(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import13.TemplateRef_(this._appEl_1, viewFactory_Spinner2);
        this._NgFor_1_6 = new import12.NgFor(this._appEl_1.vcRef, this._TemplateRef_1_5, this.parentInjector.get(import14.IterableDiffers), this.ref);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this.init([], [
            this._anchor_0,
            this._anchor_1
        ], [], []);
        return null;
    };
    _View_Spinner0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import12.NgFor) && (0 === requestNodeIndex))) {
            return this._NgFor_0_6;
        }
        if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import12.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6;
        }
        return notFoundResult;
    };
    _View_Spinner0.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_0 = this.context._c;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_0_6.ngForOf = currVal_0;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        if ((changes !== null)) {
            this._NgFor_0_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_0_6.ngDoCheck();
        }
        changes = null;
        var currVal_1 = this.context._l;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgFor_1_6.ngForOf = currVal_1;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_1, currVal_1);
            this._expr_1 = currVal_1;
        }
        if ((changes !== null)) {
            this._NgFor_1_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_1_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Spinner0;
}(import1.AppView));
export function viewFactory_Spinner0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Spinner === null)) {
        (renderType_Spinner = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, styles_Spinner, {}));
    }
    return new _View_Spinner0(viewUtils, parentInjector, declarationEl);
}
var _View_Spinner1 = (function (_super) {
    __extends(_View_Spinner1, _super);
    function _View_Spinner1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Spinner1, renderType_Spinner, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Spinner1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, ':svg:svg', null);
        this.renderer.setElementAttribute(this._el_0, 'viewBox', '0 0 64 64');
        this._NgStyle_0_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers), new import9.ElementRef(this._el_0), this.renderer);
        this._el_1 = this.renderer.createElement(this._el_0, ':svg:circle', null);
        this.renderer.setElementAttribute(this._el_1, 'transform', 'translate(32,32)');
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._el_1
        ], [], []);
        return null;
    };
    _View_Spinner1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgStyle_0_3;
        }
        return notFoundResult;
    };
    _View_Spinner1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.$implicit.style;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgStyle_0_3.ngStyle = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (!throwOnChange) {
            this._NgStyle_0_3.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this.context.$implicit.r;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_1, 'r', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Spinner1;
}(import1.AppView));
function viewFactory_Spinner1(viewUtils, parentInjector, declarationEl) {
    return new _View_Spinner1(viewUtils, parentInjector, declarationEl);
}
var _View_Spinner2 = (function (_super) {
    __extends(_View_Spinner2, _super);
    function _View_Spinner2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Spinner2, renderType_Spinner, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_Spinner2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, ':svg:svg', null);
        this.renderer.setElementAttribute(this._el_0, 'viewBox', '0 0 64 64');
        this._NgStyle_0_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers), new import9.ElementRef(this._el_0), this.renderer);
        this._el_1 = this.renderer.createElement(this._el_0, ':svg:line', null);
        this.renderer.setElementAttribute(this._el_1, 'transform', 'translate(32,32)');
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._el_1
        ], [], []);
        return null;
    };
    _View_Spinner2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgStyle_0_3;
        }
        return notFoundResult;
    };
    _View_Spinner2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.$implicit.style;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgStyle_0_3.ngStyle = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (!throwOnChange) {
            this._NgStyle_0_3.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this.context.$implicit.y1;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_1, 'y1', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.$implicit.y2;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementAttribute(this._el_1, 'y2', ((currVal_2 == null) ? null : currVal_2.toString()));
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Spinner2;
}(import1.AppView));
function viewFactory_Spinner2(viewUtils, parentInjector, declarationEl) {
    return new _View_Spinner2(viewUtils, parentInjector, declarationEl);
}
