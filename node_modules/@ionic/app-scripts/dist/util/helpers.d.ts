import { TsFiles } from './interfaces';
export declare const objectAssign: {
    <T, U>(target: T, source: U): T & U;
    <T, U, V>(target: T, source1: U, source2: V): T & U & V;
    <T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;
    (target: any, ...sources: any[]): any;
};
export declare function endsWith(str: string, tail: string): boolean;
export declare function writeFileAsync(filePath: string, content: string): Promise<any>;
export declare function readFileAsync(filePath: string): Promise<string>;
export declare function setModulePathsCache(modulePaths: string[]): void;
export declare function getModulesPathsCachePath(): string;
export declare function getModulePathsCache(): string[];
export declare function cacheTranspiledTsFiles(inTsFiles: TsFiles): void;
export declare function getCachedTranspiledTsFiles(): TsFiles;
