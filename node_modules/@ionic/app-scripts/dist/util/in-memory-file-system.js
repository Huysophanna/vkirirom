"use strict";
var InMemoryFileSystem = (function () {
    function InMemoryFileSystem(originalFileSystem, tsFiles) {
        this.originalFileSystem = originalFileSystem;
        this.tsFiles = tsFiles;
    }
    InMemoryFileSystem.prototype.isSync = function () {
        return this.originalFileSystem.isSync();
    };
    InMemoryFileSystem.prototype.stat = function (path, callback) {
        return this.originalFileSystem.stat(path, callback);
    };
    InMemoryFileSystem.prototype.readdir = function (path, callback) {
        return this.originalFileSystem.readdir(path, callback);
    };
    InMemoryFileSystem.prototype.readFile = function (path, callback) {
        if (this.tsFiles) {
            var inMemoryFile = this.tsFiles[path];
            if (inMemoryFile) {
                callback(null, new Buffer(inMemoryFile.output));
                return;
            }
        }
        return this.originalFileSystem.readFile(path, callback);
    };
    InMemoryFileSystem.prototype.readJson = function (path, callback) {
        return this.originalFileSystem.readFile(path, callback);
    };
    InMemoryFileSystem.prototype.readLink = function (path, callback) {
        return this.originalFileSystem.readFile(path, callback);
    };
    InMemoryFileSystem.prototype.purge = function (what) {
        return this.originalFileSystem.purge(what);
    };
    return InMemoryFileSystem;
}());
exports.InMemoryFileSystem = InMemoryFileSystem;
;
