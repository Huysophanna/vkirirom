// Ionic Dev Server: Server Side Logger
"use strict";
var config_1 = require('../util/config');
var logger_1 = require('../util/logger');
var ws_1 = require('ws');
var wss;
function createWebSocketServer() {
    wss = new ws_1.Server({ port: getWsPort() });
    wss.on('connection', function (ws) {
        ws.on('message', function (incomingMessage) {
            // incoming message from the client
            try {
                printClientMessage(JSON.parse(incomingMessage));
            }
            catch (e) {
                logger_1.Logger.error("error opening ws message: " + incomingMessage);
            }
        });
        // ws.send('something');
    });
}
exports.createWebSocketServer = createWebSocketServer;
function printClientMessage(msg) {
    if (msg.args.length) {
        switch (msg.category) {
            case 'console':
                printConsole(msg);
                break;
            case 'exception':
                printException(msg);
                break;
        }
    }
}
function printConsole(msg) {
    msg.args[0] = "console." + msg.type + ": " + msg.args[0];
    switch (msg.type) {
        case 'error':
            logger_1.Logger.error.apply(this, msg.args);
            break;
        case 'warn':
            logger_1.Logger.warn.apply(this, msg.args);
            break;
        case 'debug':
            logger_1.Logger.debug.apply(this, msg.args);
            break;
        default:
            logger_1.Logger.info.apply(this, msg.args);
            break;
    }
}
function printException(msg) {
}
function sendClientConsoleLogs() {
    return config_1.hasConfigValue('--consolelogs', '-c', 'ionic_consolelogs', false);
}
exports.sendClientConsoleLogs = sendClientConsoleLogs;
function getWsPort() {
    var port = config_1.getConfigValueDefault('--dev-logger-port', null, 'ionic_dev_logger_port', null);
    if (port) {
        return parseInt(port, 10);
    }
    return DEV_LOGGER_DEFAULT_PORT;
}
exports.getWsPort = getWsPort;
var DEV_LOGGER_DEFAULT_PORT = 53703;
