"use strict";
var config_1 = require('../util/config');
var path_1 = require('path');
var events = require('../util/events');
var tinylr = require('tiny-lr');
var liveReloadServer;
var liveReloadScript;
function createLiveReloadServer(host) {
    if (liveReloadServer) {
        return;
    }
    var port = getLiveReloadServerPort();
    liveReloadScript = getLiveReloadScript(host, port);
    liveReloadServer = tinylr();
    liveReloadServer.listen(port, host);
    events.on(events.EventType.FileChange, function (context, filePath) {
        fileChanged(context, filePath);
    });
}
exports.createLiveReloadServer = createLiveReloadServer;
function injectLiveReloadScript(content) {
    var contentStr = content.toString();
    if (contentStr.indexOf('/livereload.js') > -1) {
        // already added script
        return content;
    }
    var match = contentStr.match(/<\/body>(?![\s\S]*<\/body>)/i);
    if (!match) {
        match = contentStr.match(/<\/html>(?![\s\S]*<\/html>)/i);
    }
    if (match) {
        contentStr = contentStr.replace(match[0], liveReloadScript + "\n" + match[0]);
    }
    else {
        contentStr += liveReloadScript;
    }
    return contentStr;
}
exports.injectLiveReloadScript = injectLiveReloadScript;
function getLiveReloadScript(host, port) {
    if (!host) {
        host = 'localhost';
    }
    var src = "//" + host + ":" + port + "/livereload.js?snipver=1";
    return "  <!-- Ionic Dev Server: Injected LiveReload Script -->\n  <script src=\"" + src + "\" async=\"\" defer=\"\"></script>";
}
function fileChanged(context, filePath) {
    if (liveReloadServer) {
        var files = Array.isArray(filePath) ? filePath : [filePath];
        liveReloadServer.changed({
            body: {
                files: files.map(function (f) { return '/' + path_1.relative(context.wwwDir, f); })
            }
        });
    }
}
function getLiveReloadServerPort() {
    var port = config_1.getConfigValueDefault('--livereload-port', null, 'ionic_livereload_port', null);
    if (port) {
        return parseInt(port, 10);
    }
    return LIVE_RELOAD_DEFAULT_PORT;
}
function useLiveReload() {
    return !config_1.hasConfigValue('--nolivereload', '-d', 'ionic_livereload', false);
}
exports.useLiveReload = useLiveReload;
var LIVE_RELOAD_DEFAULT_PORT = 35729;
