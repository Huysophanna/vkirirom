"use strict";
var path_1 = require('path');
var fs_1 = require('fs');
var dev_server_1 = require('./dev-server');
var mime = require('mime-types');
function getConsoleLoggerScript() {
    var ionDevServer = JSON.stringify({
        sendConsoleLogs: dev_server_1.sendClientConsoleLogs(),
        wsPort: dev_server_1.getWsPort()
    });
    return "\n  " + LOGGER_HEADER + "\n  <script>var IonicDevServerConfig=" + ionDevServer + ";</script>\n  <link href=\"" + LOGGER_DIR + "/ion-dev.css\" rel=\"stylesheet\">\n  <script src=\"" + LOGGER_DIR + "/ion-dev.js\"></script>\n  ";
}
function injectDevLoggerScript(content) {
    var contentStr = content.toString();
    if (contentStr.indexOf(LOGGER_HEADER) > -1) {
        // already added script somehow
        return content;
    }
    var match = contentStr.match(/<head>(?![\s\S]*<head>)/i);
    if (!match) {
        match = contentStr.match(/<body>(?![\s\S]*<body>)/i);
    }
    if (match) {
        contentStr = contentStr.replace(match[0], match[0] + "\n" + getConsoleLoggerScript());
    }
    else {
        contentStr = getConsoleLoggerScript() + contentStr;
    }
    return contentStr;
}
exports.injectDevLoggerScript = injectDevLoggerScript;
function responseDevLogger(request, response) {
    var urlParts = request.url.split('?')[0].split('/');
    var fileName = urlParts[urlParts.length - 1];
    var filePath = path_1.join(__dirname, '..', '..', 'bin', fileName);
    fs_1.readFile(filePath, function (err, content) {
        if (err) {
            // gahh!
            response.writeHead(404, { 'Content-Type': 'text/html' });
            response.end("File not found: " + request.url + "<br>Local file: " + filePath);
        }
        else {
            var headers = {
                'Content-Type': mime.lookup(filePath) || 'application/octet-stream'
            };
            response.writeHead(200, headers);
            response.end(content, mime.charset(headers['Content-Type']));
        }
    });
}
exports.responseDevLogger = responseDevLogger;
function isDevLoggerUrl(filePath) {
    return filePath.indexOf(LOGGER_DIR) > -1;
}
exports.isDevLoggerUrl = isDevLoggerUrl;
function useDevLogger() {
    return true;
}
exports.useDevLogger = useDevLogger;
var LOGGER_HEADER = '<!-- Ionic Dev Server: Injected Logger Script -->';
var LOGGER_DIR = '__ion-dev-server';
